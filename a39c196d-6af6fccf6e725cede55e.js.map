{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["STARTING_WEIGHTS","Tweet","props","useState","tweetLoaded","setTweetLoaded","css","color","gray8","tweetId","onLoad","Paper","abstract","expandAbstract","setExpandAbstract","showTweets","setShowTweets","nTweets","setNTweets","abstractDisplayStyle","onClick","className","light","blue6","substring","indexOf","s2","s2id","href","target","gray5","gray2","gray6","src","SemanticScholarLogo","buzz","citations","weights","twitter","likes","replies","retweets","toFixed","posterSession","width","height","cx","cy","fill","geekblue5","r","orange5","gray7","i","title","authors","join","pdf","emoji","size","arXiv","length","replace","gray10","prev","TwitterLogo","yellow9","CiteIcon","ReplyIcon","RetweetIcon","LikeIcon","ids","slice","map","key","DecimalStep","span","min","max","onChange","value","isNaN","setInputValue","setDirty","inputValue","step","tooltipVisible","style","margin","SortWeights","citationsInput","setCitationsInput","retweetsInput","setRetweetsInput","likesInput","setLikesInput","repliesInput","setRepliesInput","isDirty","darken","gray1","gray4","setSortWeights","PosterSessionDate","checked","posterSessions","has","date","setPosterSessions","Set","delete","add","Home","papers","data","allPaperDataJson","edges","setAbstractDisplayStyle","foldMenu","setFoldMenu","sortWeights","filter","paper","node","sort","p1","p2","likes1","retweets1","replies1","citations1","likes2","retweets2","replies2","citations2","link","rel","type","favicon","dark","blue1","geekblue8","gray9","Group","geekblue4","geekblue7","e","Button","data-icon","data-size","data-show-count","aria-label","id"],"mappings":"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","file":"a39c196d-6af6fccf6e725cede55e.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Latex from \"react-latex\";\nimport { Button, Radio, Checkbox, Slider, InputNumber, Row, Col } from \"antd\";\nimport { Helmet } from \"react-helmet\";\nimport { css } from \"@emotion/react\";\nimport color from \"~styles/color\";\nimport { graphql } from \"gatsby\";\nimport { Emoji } from \"emoji-mart\";\nimport { MenuFoldOutlined, GithubOutlined } from \"@ant-design/icons\";\nimport { darken } from \"polished\";\nimport SemanticScholarLogo from \"~icons/semantic-scholar.svg\";\nimport TwitterLogo from \"~icons/twitter.svg\";\nimport RetweetIcon from \"~icons/retweet-blue.svg\";\nimport LikeIcon from \"~icons/like-blue.svg\";\nimport ReplyIcon from \"~icons/reply-blue.svg\";\nimport CiteIcon from \"~icons/cite.svg\";\nimport { TwitterTweetEmbed } from \"react-twitter-embed\";\n// import { Star } from \"React-github-buttons\";\nimport GitHubButton from 'react-github-btn'\nimport favicon from \"~icons/favicon.png\";\n\ninterface PaperData {\n  abstract: string;\n  citations: number;\n  title: string;\n  twitter: {\n    likes: number;\n    replies: number;\n    retweets: number;\n    ids: string[];\n  };\n  id: number;\n  s2id: string;\n  pdf: string;\n  authors: string[];\n  arXiv: string;\n  posterSession: \"CVPR\" | \"ECCV\"; \n  // | \"Wednesday\" | \"Thursday\" | \"Friday\";\n}\n\ninterface PaperComponent extends PaperData {\n  i: number;\n  abstractDisplayStyle: string;\n  weights: {\n    citations: number;\n    replies: number;\n    retweets: number;\n    likes: number;\n  };\n}\n\nconst STARTING_WEIGHTS = {\n  citations: 1,\n  retweets: 0.5,\n  likes: 0.25,\n  replies: 0.25,\n};\n\nfunction Tweet(props: { tweetId: string }) {\n  const [tweetLoaded, setTweetLoaded] = useState(false);\n  return (\n    <div\n      css={css`\n        max-width: 350px;\n        width: 100%;\n        display: inline-block;\n        vertical-align: top;\n        margin-right: 15px;\n      `}\n    >\n      {!tweetLoaded ? (\n        <div\n          css={css`\n            /* text-align: center; */\n            margin-top: 10px;\n            color: ${color.gray8};\n          `}\n        >\n          Loading Tweet...\n        </div>\n      ) : (\n        <></>\n      )}\n      <TwitterTweetEmbed\n        tweetId={props.tweetId}\n        onLoad={() => setTweetLoaded(true)}\n      />\n    </div>\n  );\n}\n\nfunction Paper(props: PaperComponent) {\n  const [expandAbstract, setExpandAbstract] = useState(false),\n    [showTweets, setShowTweets] = useState(false),\n    [nTweets, setNTweets] = useState(3);\n\n  let abstract: string | React.ReactNode;\n  switch (props.abstractDisplayStyle) {\n    case \"full\":\n      abstract = props.abstract;\n      break;\n    case \"preview\":\n      if (expandAbstract) {\n        abstract = (\n          <>\n            {props.abstract}{\" \"}\n            <span\n              onClick={() => setExpandAbstract(false)}\n              className=\"noselect\"\n              css={css`\n                color: ${color.light.blue6};\n                &:hover {\n                  cursor: pointer;\n                }\n              `}\n            >\n              [Collapse]\n            </span>\n          </>\n        );\n      } else {\n        abstract = (\n          <>\n            {props.abstract.substring(0, props.abstract.indexOf(\". \") + 1)}{\" \"}\n            <span\n              onClick={() => setExpandAbstract(true)}\n              className=\"noselect\"\n              css={css`\n                color: ${color.light.blue6};\n                &:hover {\n                  cursor: pointer;\n                }\n              `}\n            >\n              [Expand]\n            </span>\n          </>\n        );\n      }\n      break;\n    case \"hide\":\n      abstract = \"\";\n      break;\n    default:\n      throw `No idea what ${props.abstractDisplayStyle} is! Must be in {\"full\", \"preview\", \"hide\"}.`;\n  }\n\n  // Add link to LongTail Paper Reproducibility\n  // https://realrahulvigneswaran.notion.site/LongTail-Paper-Reproducibility-f149501abb5243d69b15580be8c109d1\n\n  const s2 = props.s2id ? (\n    <a href={`//semanticscholar.org/paper/${props.s2id}`} target=\"_blank\">\n      <div\n        css={css`\n          display: inline-block;\n          border: 1px solid ${color.gray5};\n          padding-left: 10px;\n          padding-right: 10px;\n          padding-top: 2px;\n          padding-bottom: 4px;\n          border-radius: 3px;\n          font-size: 13px;\n          background-color: ${color.gray2 + \"77\"};\n          transition-duration: 0.3s;\n          margin-right: 10px;\n          &:hover {\n            border-color: ${color.gray6};\n            background-color: ${color.gray2};\n          }\n        `}\n      >\n        <img\n          src={SemanticScholarLogo}\n          css={css`\n            height: 17px;\n            margin-right: 5px;\n          `}\n        />\n        Semantic Scholar\n      </div>\n    </a>\n  ) : (\n    <></>\n  );\n\n  let buzz: string | number = 0;\n  if (props.citations) {\n    buzz += props.citations * props.weights.citations;\n  }\n  if (props.twitter) {\n    buzz +=\n      props.twitter.likes * props.weights.likes +\n      props.twitter.replies * props.weights.replies +\n      props.twitter.retweets * props.weights.retweets;\n  }\n  buzz = buzz.toFixed(2);\n\n  const posterSession = (\n    <>\n      <svg\n        width=\"30\"\n        height=\"10\"\n        css={css`\n          margin-top: 10px;\n        `}\n      >\n        <circle\n          cx=\"5\"\n          cy=\"5\"\n          fill={\n            props.posterSession === \"CVPR\"\n              ? color.light.geekblue5\n              : color.gray5\n          }\n          r=\"5\"\n        />\n\n        <circle\n          cx=\"25\"\n          cy=\"5\"\n          fill={\n            props.posterSession === \"ECCV\"\n              ? color.light.orange5\n              : color.gray5\n          }\n          r=\"5\"\n        />\n        \n        {/* <circle\n          cx=\"20\"\n          cy=\"5\"\n          fill={\n            props.posterSession === \"ICCV\"\n              ? color.light.geekblue5\n              : color.gray5\n          }\n          r=\"5\" */}\n        />\n        {/* <circle\n          cx=\"35\"\n          cy=\"5\"\n          fill={\n            props.posterSession === \"Wednesday\"\n              ? color.light.geekblue5\n              : color.gray5\n          }\n          r=\"5\"\n        />\n        <circle\n          cx=\"50\"\n          cy=\"5\"\n          fill={\n            props.posterSession === \"Thursday\"\n              ? color.light.geekblue5\n              : color.gray5\n          }\n          r=\"5\"\n        />\n        <circle\n          cx=\"65\"\n          cy=\"5\"\n          fill={\n            props.posterSession === \"Friday\"\n              ? color.light.geekblue5\n              : color.gray5\n          }\n          r=\"5\"\n        /> */}\n      </svg>\n      <span\n        css={css`\n          color: ${color.gray7} !important;\n          margin-left: 7px;\n        `}\n      >\n        {props.posterSession}{\" \"}\n        <span\n          css={css`\n            color: ${color.gray6};\n          `}\n        >\n          Conference\n        </span>\n      </span>\n    </>\n  );\n\n  return (\n    <div\n      css={css`\n        * {\n          color: black;\n        }\n        width: 100%;\n        text-align: left;\n        padding: 30px 0px;\n        border-bottom: 1px solid ${color.gray5};\n      `}\n    >\n      <div\n        css={css`\n          position: relative;\n          margin-bottom: 2px;\n        `}\n      >\n        <div\n          css={css`\n            display: inline-block;\n            width: 100px;\n            position: absolute;\n            left: -110px;\n            text-align: right;\n            top: 2px;\n          `}\n        >\n          <div\n            css={css`\n              font-weight: normal;\n              text-align: right !important;\n              font-size: 18px;\n            `}\n          >\n            [{props.i + 1}]\n          </div>\n        </div>\n        <h2\n          css={css`\n            font-weight: 600;\n            margin-bottom: 0px;\n          `}\n        >\n          {props.title}\n        </h2>\n      </div>\n      <h4\n        css={css`\n          font-size: 15px;\n          color: ${color.gray8};\n          margin-bottom: 3px;\n        `}\n      >\n        {props.authors.join(\", \")}\n      </h4>\n      <p\n        css={css`\n          text-align: left;\n          font-size: 14px;\n        `}\n      >\n        {abstract}\n      </p>\n      <div\n        css={css`\n          margin-top: 10px;\n        `}\n      >\n        {props.pdf ? (\n          <a href={props.pdf} target=\"_blank\">\n            <div\n              css={css`\n                display: inline-block;\n                padding-left: 10px;\n                padding-right: 10px;\n                padding-top: 2px;\n                padding-bottom: 3px;\n                margin-right: 10px;\n                border: 1px solid ${color.gray5};\n                border-radius: 5px;\n                transition-duration: 0.3s;\n\n                &:hover {\n                  border-color: ${color.gray6 + \"88\"};\n                  background-color: ${color.gray2};\n                }\n\n                > .emoji-mart-emoji {\n                  vertical-align: middle;\n                }\n              `}\n            >\n              <Emoji emoji=\"page_facing_up\" size={16} /> PDF\n            </div>\n          </a>\n        ) : (\n          <></>\n        )}\n        {s2}\n        {props.arXiv ? (\n          <a href={props.arXiv.substring(\"http:\".length)} target=\"_blank\">\n            <div\n              css={css`\n                display: inline-block;\n                padding-left: 10px;\n                padding-right: 10px;\n                padding-top: 2px;\n                padding-bottom: 3px;\n                margin-right: 10px;\n                border: 1px solid ${color.gray5};\n                border-radius: 5px;\n                transition-duration: 0.3s;\n\n                &:hover {\n                  border-color: ${color.gray6 + \"88\"};\n                  background-color: ${color.gray2};\n                }\n\n                > .emoji-mart-emoji {\n                  vertical-align: middle;\n                }\n              `}\n            >\n              <Emoji emoji=\"closed_book\" size={16} /> arXiv\n            </div>\n          </a>\n          ) : (\n            <></>\n          )}\n        {props.arXiv ? (\n          <a href={props.arXiv.substring(\"http:\".length).replace(\"arxiv.org/abs\", \"ar5iv.labs.arxiv.org/html/\")} target=\"_blank\">\n            <div\n              css={css`\n                display: inline-block;\n                padding-left: 10px;\n                padding-right: 10px;\n                padding-top: 2px;\n                padding-bottom: 3px;\n                margin-right: 10px;\n                border: 1px solid ${color.gray5};\n                border-radius: 5px;\n                transition-duration: 0.3s;\n\n                &:hover {\n                  border-color: ${color.gray6 + \"88\"};\n                  background-color: ${color.gray2};\n                }\n\n                > .emoji-mart-emoji {\n                  vertical-align: middle;\n                }\n              `}\n            >\n              <Emoji emoji=\"iphone\" size={16} /> Read on Mobile\n            </div>\n          </a>\n        ) : (\n          <></>\n        )}\n        <div\n          css={css`\n            border: 1px solid ${showTweets ? \"#1d9bf066\" : color.gray5};\n            display: inline-block;\n            padding-left: 10px;\n            padding-right: 10px;\n            padding-top: 2px;\n            padding-bottom: 4px;\n            border-radius: 5px;\n            transition-duration: 0.3s;\n            margin-right: 10px;\n\n            &:hover {\n              background-color: #1d9bf011;\n              border-color: #1d9bf066;\n              cursor: pointer;\n            }\n            background-color: ${showTweets ? \"#1d9bf011\" : \"transparent\"};\n\n            > span {\n              color: ${color.gray10} !important;\n            }\n          `}\n          onClick={() =>\n            setShowTweets((prev) => {\n              if (prev) {\n                setNTweets(3);\n              }\n              return !prev;\n            })\n          }\n        >\n          <img\n            src={TwitterLogo}\n            css={css`\n              height: 14px;\n              margin-top: -3px;\n            `}\n          />{\" \"}\n          <span>{showTweets ? \"Hide\" : \"Show\"} Tweets</span>\n        </div>\n      </div>\n      <div\n        css={css`\n          margin-top: 10px;\n        `}\n      >\n        <div\n          css={css`\n            display: inline-block;\n            margin-right: 16px;\n            .emoji-mart-emoji {\n              vertical-align: middle;\n            }\n          `}\n        >\n          <Emoji emoji=\"bee\" size={16} />{\" \"}\n          <span\n            css={css`\n              color: ${color.light.yellow9};\n              font-weight: 600;\n            `}\n          >\n            {buzz}\n          </span>\n        </div>\n        {props.citations ? (\n          <div\n            css={css`\n              display: inline-block;\n              margin-right: 16px;\n            `}\n          >\n            <img\n              src={CiteIcon}\n              css={css`\n                height: 13px;\n                margin-top: -1px;\n              `}\n            />{\" \"}\n            <span\n              css={css`\n                color: #d77a27;\n                font-weight: 600;\n              `}\n            >\n              {props.citations}\n            </span>\n          </div>\n        ) : (\n          <></>\n        )}\n        {props.twitter === null ? (\n          <></>\n        ) : (\n          <div\n            css={css`\n              display: inline-block;\n            `}\n          >\n            <div\n              css={css`\n                /* background-color: #1d9bf0; */\n                display: inline-block;\n\n                > div {\n                  padding-top: 2px;\n                  padding-bottom: 4px;\n                  border-radius: 5px;\n                  display: inline-block;\n                  margin-right: 16px;\n                  > span {\n                    color: #1d9bf0 !important;\n                    font-weight: 600;\n                  }\n                  > img {\n                    height: 13px;\n                    display: inline-block;\n                    margin-top: -2px;\n                  }\n                }\n              `}\n            >\n              <div>\n                <img src={ReplyIcon} /> <span>{props.twitter.replies}</span>\n              </div>\n              <div>\n                <img src={RetweetIcon} /> <span>{props.twitter.retweets}</span>\n              </div>\n              <div>\n                <img src={LikeIcon} /> <span>{props.twitter.likes}</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      {posterSession}\n      {showTweets ? (\n        <div\n          css={css`\n            max-width: 1200px;\n          `}\n        >\n          {props.twitter.ids\n            .slice(0, nTweets)\n            .map((tweetId: string, i: number) => (\n              <Tweet tweetId={tweetId} key={i} />\n            ))}\n        </div>\n      ) : (\n        <></>\n      )}\n      {showTweets && props.twitter.ids.length > nTweets ? (\n        <div\n          css={css`\n            border: 1px solid ${color.gray5};\n            display: block;\n            padding-left: 10px;\n            padding-right: 10px;\n            padding-top: 2px;\n            padding-bottom: 4px;\n            border-radius: 5px;\n            transition-duration: 0.3s;\n            margin-right: 10px;\n            margin-top: 15px;\n            max-width: 1080px;\n            text-align: center;\n\n            &:hover {\n              cursor: pointer;\n            }\n            background-color: #1d9bf011;\n            border-color: #1d9bf066;\n\n            > span {\n              color: ${color.gray10} !important;\n            }\n          `}\n          onClick={() => setNTweets((prev) => prev + 3)}\n        >\n          <img\n            src={TwitterLogo}\n            css={css`\n              height: 14px;\n              margin-top: -3px;\n            `}\n          />{\" \"}\n          <span>Show More</span>\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nfunction DecimalStep(props: { inputValue: number; setInputValue; setDirty }) {\n  return (\n    <Row>\n      <Col span={12}>\n        <Slider\n          min={0}\n          max={1}\n          onChange={(value: number) => {\n            if (isNaN(value)) {\n              return;\n            }\n            props.setInputValue(value);\n            props.setDirty(true);\n          }}\n          value={typeof props.inputValue === \"number\" ? props.inputValue : 0}\n          step={0.01}\n          tooltipVisible={false}\n        />\n      </Col>\n      <Col\n        span={4}\n        css={css`\n          margin-top: -12px;\n        `}\n      >\n        <InputNumber\n          min={0}\n          max={1}\n          style={{ margin: \"0 16px\" }}\n          step={0.01}\n          value={props.inputValue}\n          onChange={(value: number) => {\n            if (isNaN(value)) {\n              return;\n            }\n            props.setInputValue(value);\n            props.setDirty(true);\n          }}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction SortWeights(props: { setSortWeights }) {\n  const [citationsInput, setCitationsInput] = useState(\n      STARTING_WEIGHTS.citations\n    ),\n    [retweetsInput, setRetweetsInput] = useState(STARTING_WEIGHTS.retweets),\n    [likesInput, setLikesInput] = useState(STARTING_WEIGHTS.likes),\n    [repliesInput, setRepliesInput] = useState(STARTING_WEIGHTS.replies),\n    [isDirty, setDirty] = useState(false);\n\n  return (\n    <>\n      <div\n        css={css`\n          font-weight: 600;\n          margin-bottom: 10px;\n          margin-top: 30px;\n        `}\n      >\n        Sorting Weights\n      </div>\n      <div\n        css={css`\n          > div {\n            margin-bottom: 0px;\n            * {\n              color: black;\n            }\n            > div:nth-child(1) {\n              color: white !important;\n              margin-bottom: -8px;\n            }\n          }\n        `}\n      >\n        <div>\n          <div>Citations</div>{\" \"}\n          <DecimalStep\n            inputValue={citationsInput}\n            setInputValue={setCitationsInput}\n            setDirty={setDirty}\n          />\n        </div>\n        <div>\n          <div>Replies</div>{\" \"}\n          <DecimalStep\n            inputValue={repliesInput}\n            setInputValue={setRepliesInput}\n            setDirty={setDirty}\n          />\n        </div>\n        <div>\n          <div>Retweets</div>{\" \"}\n          <DecimalStep\n            inputValue={retweetsInput}\n            setInputValue={setRetweetsInput}\n            setDirty={setDirty}\n          />\n        </div>\n        <div>\n          <div>Likes</div>{\" \"}\n          <DecimalStep\n            inputValue={likesInput}\n            setInputValue={setLikesInput}\n            setDirty={setDirty}\n          />\n        </div>\n        <Button\n          css={css`\n            width: 100%;\n            margin-top: 8px;\n            background-color: ${isDirty\n              ? darken(0.1, \"#7f9ef3\")\n              : darken(0.4, \"#7f9ef3\")} !important;\n            filter: ${isDirty ? \"saturate(1)\" : \"saturate(0.3)\"};\n            border-color: transparent !important;\n            &:hover {\n              cursor: ${isDirty ? \"pointer\" : \"default\"} !important;\n            }\n            > span {\n              color: ${isDirty ? color.gray1 : color.gray4 + \"aa\"} !important;\n            }\n          `}\n          onClick={() => {\n            // Checks if already sorted\n            if (!isDirty) {\n              return;\n            }\n\n            props.setSortWeights({\n              citations: citationsInput,\n              retweets: retweetsInput,\n              likes: likesInput,\n              replies: repliesInput,\n            });\n            setDirty(false);\n          }}\n        >\n          Sort\n        </Button>\n      </div>\n    </>\n  );\n}\n\nfunction PosterSessionDate(props: {\n  date: string;\n  posterSessions;\n  setPosterSessions;\n}) {\n  return (\n    <div>\n      <Checkbox\n        checked={props.posterSessions.has(props.date)}\n        onChange={() => {\n          props.posterSessions.has(props.date)\n            ? props.setPosterSessions((prev) => {\n                prev = new Set(prev);\n                prev.delete(props.date);\n                return prev;\n              })\n            : props.setPosterSessions((prev) => {\n                prev = new Set(prev);\n                prev.add(props.date);\n                return prev;\n              });\n        }}\n      >\n        {props.date}\n      </Checkbox>\n    </div>\n  );\n}\n\nexport default function Home({ data }) {\n  let papers = data.allPaperDataJson.edges;\n\n  const [abstractDisplayStyle, setAbstractDisplayStyle] = useState(\"preview\"),\n    [foldMenu, setFoldMenu] = useState(false),\n    [sortWeights, setSortWeights] = useState({\n      citations: STARTING_WEIGHTS.citations,\n      retweets: STARTING_WEIGHTS.retweets,\n      likes: STARTING_WEIGHTS.likes,\n      replies: STARTING_WEIGHTS.replies,\n    }),\n    [posterSessions, setPosterSessions] = useState(new Set([]));\n\n  if (posterSessions.size !== 0) {\n    papers = papers.filter((paper: { node: PaperData }) => {\n      return posterSessions.has(paper.node.posterSession);\n    });\n  }\n\n  papers.sort((p1: { node: PaperData }, p2: { node: PaperData }) => {\n    let citations1 = p1.node.citations == null ? 0 : p1.node.citations;\n    let likes1: number, retweets1: number, replies1: number;\n    if (p1.node.twitter === null) {\n      likes1 = 0;\n      retweets1 = 0;\n      replies1 = 0;\n    } else {\n      likes1 = p1.node.twitter.likes;\n      retweets1 = p1.node.twitter.retweets;\n      replies1 = p1.node.twitter.replies;\n    }\n\n    let citations2 = p2.node.citations == null ? 0 : p2.node.citations;\n    let likes2: number, retweets2: number, replies2: number;\n    if (p2.node.twitter === null) {\n      likes2 = 0;\n      retweets2 = 0;\n      replies2 = 0;\n    } else {\n      likes2 = p2.node.twitter.likes;\n      retweets2 = p2.node.twitter.retweets;\n      replies2 = p2.node.twitter.replies;\n    }\n\n    return (\n      sortWeights.citations * (citations2 - citations1) +\n      sortWeights.likes * (likes2 - likes1) +\n      sortWeights.retweets * (retweets2 - retweets1) +\n      sortWeights.replies * (replies2 - replies1)\n    );\n  });\n\n  // papers = papers.slice(0, 100);\n\n  return (\n    <div\n      css={css`\n        background-color: ${color.gray1};\n        min-height: 100vh;\n        color: white;\n        text-align: center;\n      `}\n    >\n      <Helmet\n        title=\"Long-Tail Buzz\"\n        link={[\n          {\n            rel: \"shortcut icon\",\n            type: \"image/png\",\n            href: `${favicon}`,\n          },\n        ]}\n      />\n      {/* <header\n        css={css`\n          box-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.15);\n          padding-top: 10px;\n          padding-bottom: 10px;\n          position: relative;\n          z-index: 99 !important;\n        `}\n      >\n        <h2>Hello, world!</h2>\n        <Latex>\n          The center of the universe is at $5+4$. One can also do something like\n          $5+4$.\n        </Latex>\n      </header> */}\n      {/* TODO: link to github/license */}\n      <div\n        css={css`\n          display: grid;\n          grid-template-columns: ${foldMenu\n            ? \"45px calc(100% - 45px)\"\n            : \"256px calc(100% - 256px)\"};\n        `}\n      >\n        <div\n          css={css`\n            background-color: ${foldMenu ? \"transparent\" : color.dark.blue1};\n            color: white;\n            grid-row: 1;\n            grid-column: 1;\n            height: 100vh;\n            overflow-y: auto;\n            position: sticky;\n            top: 0px;\n            padding: 15px 15px;\n            text-align: left;\n            * {\n              color: white;\n            }\n          `}\n        >\n          {foldMenu ? (\n            <MenuFoldOutlined\n              css={css`\n                margin-top: 2px;\n                font-size: 18px;\n                transform: rotate(180deg);\n                * {\n                  color: ${color.dark.geekblue5} !important;\n                }\n                padding: 3px;\n                border-radius: 2px;\n                transition-duration: 0.1s;\n\n                &:hover {\n                  cursor: pointer;\n                  background-color: ${color.gray4};\n                }\n              `}\n              onClick={() => setFoldMenu((prev) => !prev)}\n            />\n          ) : (\n            <div>\n              <div\n                css={css`\n                  font-weight: 600;\n                  margin-bottom: 8px;\n                  text-align: left;\n                  font-size: 16px;\n                  margin-bottom: 15px;\n                `}\n              >\n                <span\n                  css={css`\n                    .emoji-mart-emoji {\n                      vertical-align: middle;\n                    }\n                  `}\n                >\n                  <Emoji emoji=\"bee\" size={18} /> Long-Tail Buzz{\" \"}\n                  <span\n                    css={css`\n                      font-weight: normal;\n                    `}\n                  >\n                    - 2022\n                  </span>\n                </span>\n                <MenuFoldOutlined\n                  css={css`\n                    float: right;\n                    margin-top: 2px;\n                    font-size: 18px;\n                    * {\n                      color: ${color.dark.geekblue8} !important;\n                    }\n                    padding: 3px;\n                    border-radius: 2px;\n                    transition-duration: 0.1s;\n\n                    &:hover {\n                      cursor: pointer;\n                      background-color: ${color.gray9};\n                    }\n                  `}\n                  onClick={() => setFoldMenu((prev) => !prev)}\n                />\n              </div>\n              <SortWeights setSortWeights={setSortWeights} />\n              <div\n                css={css`\n                  font-weight: 600;\n                  margin-bottom: 3px;\n                  margin-top: 30px;\n                `}\n              >\n                Conferences\n              </div>\n              <div\n                css={css`\n                  > div {\n                    margin-bottom: 3px;\n                  }\n                `}\n              >\n                <PosterSessionDate\n                  date=\"CVPR\"\n                  posterSessions={posterSessions}\n                  setPosterSessions={setPosterSessions}\n                />\n                <PosterSessionDate\n                  date=\"ECCV\"\n                  posterSessions={posterSessions}\n                  setPosterSessions={setPosterSessions}\n                />\n                {/* <PosterSessionDate\n                  date=\"ICCV\"\n                  posterSessions={posterSessions}\n                  setPosterSessions={setPosterSessions}\n                /> */}\n                {/* <PosterSessionDate\n                  date=\"Wednesday\"\n                  posterSessions={posterSessions}\n                  setPosterSessions={setPosterSessions}\n                />\n                <PosterSessionDate\n                  date=\"Thursday\"\n                  posterSessions={posterSessions}\n                  setPosterSessions={setPosterSessions}\n                />\n                <PosterSessionDate\n                  date=\"Friday\"\n                  posterSessions={posterSessions}\n                  setPosterSessions={setPosterSessions}\n                /> */}\n              </div>\n              <div\n                css={css`\n                  font-weight: 600;\n                  margin-bottom: 8px;\n                  margin-top: 30px;\n                `}\n              >\n                Abstracts\n              </div>\n              <Radio.Group\n                css={css`\n                  width: 100%;\n\n                  * {\n                    background-color: transparent !important;\n                    /* width: 100% !important; */\n                  }\n\n                  .ant-radio-button-checked {\n                    background-color: ${color.dark.geekblue4} !important;\n                    z-index: -99 !important;\n                  }\n                  .ant-radio-button-wrapper {\n                    &:before {\n                      background-color: ${color.dark.geekblue7} !important;\n                    }\n                    border-color: ${color.dark.geekblue7} !important;\n                    width: 33% !important;\n                    text-align: center;\n                  }\n                  .ant-radio-button-wrapper-checked > span {\n                    color: white !important;\n                  }\n                `}\n                onChange={(e) => setAbstractDisplayStyle(e.target.value)}\n                value={abstractDisplayStyle}\n              >\n                <Radio.Button value=\"full\">Full</Radio.Button>\n                <Radio.Button value=\"preview\">Preview</Radio.Button>\n                <Radio.Button value=\"hide\">Hide</Radio.Button>\n              </Radio.Group>\n              <div\n                css={css`\n                  font-weight: 600;\n                  margin-bottom: 8px;\n                  margin-top: 30px;\n                `}\n              >\n                Fork of {\" \"}\n              <a\n                href=\"//mattdeitke.com/cvpr-buzz\"\n                target=\"_blank\"\n                css={css`\n                  color: ${color.light.blue6} !important;\n                  border-bottom: 1px dashed ${color.light.blue6};\n                `}\n              >\n                 Matt Deitke's CVPR Buzz\n              </a>\n              </div>\n            </div>\n          )}\n        </div>\n        <div\n          css={css`\n            grid-row: 1;\n            grid-column: 2;\n            @media (max-width: 1500px) {\n              max-width: calc(100% - 50px);\n              margin-left: 50px;\n            }\n          `}\n        >\n          <div\n            css={css`\n              /* background-color: white; */\n              margin-right: 5%;\n              margin-left: 5%;\n              margin-top: 25px;\n              margin-bottom: 80px;\n              text-align: left;\n            `}\n          >\n            <h1\n              css={css`\n                text-align: left;\n                font-weight: 600;\n              `}\n            >\n              <span\n                css={css`\n                  .emoji-mart-emoji {\n                    vertical-align: middle;\n                  }\n                `}\n              >\n                <Emoji emoji=\"bee\" size={28} /> Long-Tail Buzz{\" \"}\n              </span>\n              <span\n                css={css`\n                  font-weight: normal;\n                `}\n              >\n                - 2022\n              </span>\n            </h1>\n            <h3\n              css={css`\n                margin-top: -10px;\n              `}\n            >\n              Maintained by {\" \"}\n              <a\n                href=\"//rahulvigneswaran.github.io\"\n                target=\"_blank\"\n                css={css`\n                  color: ${color.light.blue6} !important;\n                  border-bottom: 1px dashed ${color.light.blue6};\n                `}\n              >\n                Rahul Vigneswaran\n              </a>\n            </h3>\n            <p\n              css={css`\n                color: ${color.gray8};\n                max-width: 900px;\n                margin-top: 15px;\n                margin-bottom: 10px;\n              `}\n            >\n            Long-Tail Buzz displays the most discussed {\" \"}\n              <a\n                href=\"//rahulvigneswaran.github.io/post/long-tail-classification/\"\n                target=\"_blank\"\n                css={css`\n                  color: ${color.light.blue6} !important;\n                  border-bottom: 1px dashed ${color.light.blue6};\n                `}\n              >\n                long-tail\n              </a> papers at <b>top AI conferences (2022)</b>.\n            </p>\n            <div>\n              <GitHubButton href=\"https://github.com/rahulvigneswaran/longtail-buzz\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star rahulvigneswaran/longtail-buzz on GitHub\">Star</GitHubButton>\n              {/* <Star owner=\"mattdeitke\" repo=\"cvpr-buzz\" /> */}\n            </div>\n            <div\n              css={css`\n                color: ${color.gray6};\n                border-top: 1px solid ${color.gray4};\n                margin-top: 30px;\n                margin-bottom: -20px;\n                padding-top: 5px;\n              `}\n            >\n              {papers.length} results\n            </div>\n            {papers.map((paper: { node: PaperData }, i: number) => (\n              <Paper\n                abstractDisplayStyle={abstractDisplayStyle}\n                weights={sortWeights}\n                key={paper.node.id}\n                {...paper.node}\n                i={i}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const query = graphql`\n  {\n    allPaperDataJson {\n      edges {\n        node {\n          abstract\n          citations\n          title\n          twitter {\n            likes\n            replies\n            retweets\n            ids\n          }\n          id\n          s2id\n          pdf\n          posterSession\n          authors\n          arXiv\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}